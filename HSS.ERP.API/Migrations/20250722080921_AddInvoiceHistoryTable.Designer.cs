// <auto-generated />
using System;
using HSS.ERP.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HSS.ERP.API.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20250722080921_AddInvoiceHistoryTable")]
    partial class AddInvoiceHistoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvoiceManager.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("invoice_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("AzureFunctionRunId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("azure_function_run_id");

                    b.Property<string>("CnrTeamFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("cnrteam_flag");

                    b.Property<string>("ContractCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("contract_code");

                    b.Property<int>("ContractNo")
                        .HasColumnType("integer")
                        .HasColumnName("contract_no");

                    b.Property<string>("CpComplaintCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cpcomplaint_code");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cust_code");

                    b.Property<float>("CustomerDiscount")
                        .HasColumnType("real")
                        .HasColumnName("cust_discount");

                    b.Property<float>("DwPercent")
                        .HasColumnType("real")
                        .HasColumnName("dw_percent");

                    b.Property<DateTime?>("InvoiceCreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoice_createdate");

                    b.Property<DateTime?>("InvoiceEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoice_enddate");

                    b.Property<short>("InvoiceOffHire")
                        .HasColumnType("smallint")
                        .HasColumnName("invoice_offhire");

                    b.Property<string>("InvoiceOrder")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("invoice_order");

                    b.Property<short>("InvoiceSeqNo")
                        .HasColumnType("smallint")
                        .HasColumnName("invoice_seqno");

                    b.Property<string>("InvoiceSlCode")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("invoice_slcode");

                    b.Property<DateTime?>("InvoiceSlDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoice_sldate");

                    b.Property<DateTime?>("InvoiceStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoice_startdate");

                    b.Property<string>("InvoiceStatusCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoicestatus_code");

                    b.Property<string>("InvoiceTypeCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoicetype_code");

                    b.Property<decimal>("InvoiceValue")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoice_value");

                    b.Property<decimal>("InvoiceVat")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoice_vat");

                    b.Property<short>("PeriodNo")
                        .HasColumnType("smallint")
                        .HasColumnName("period_no");

                    b.Property<int>("PrNo")
                        .HasColumnType("integer")
                        .HasColumnName("pr_no");

                    b.Property<string>("ProcessedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("processed_by");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_date");

                    b.Property<int?>("TmsBookingNo")
                        .HasColumnType("integer")
                        .HasColumnName("tmsbooking_no");

                    b.Property<short>("UnitNoControl")
                        .HasColumnType("smallint")
                        .HasColumnName("unit_no_control");

                    b.Property<short>("UnitNoIncome")
                        .HasColumnType("smallint")
                        .HasColumnName("unit_no_income");

                    b.HasKey("InvoiceId");

                    b.ToTable("hss_invoice", "tms");
                });

            modelBuilder.Entity("InvoiceManager.Models.InvoiceHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("history_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("HistoryContent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("history_content");

                    b.Property<string>("HistoryTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("history_title");

                    b.Property<string>("HistoryType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("history_type");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer")
                        .HasColumnName("invoice_id");

                    b.HasKey("HistoryId");

                    b.HasIndex("InvoiceId")
                        .HasDatabaseName("IX_InvoiceHistory_InvoiceId");

                    b.ToTable("invoice_history", "tms");
                });

            modelBuilder.Entity("InvoiceManager.Models.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("invoice_line_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvoiceLineId"));

                    b.Property<string>("ContractCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("contract_code");

                    b.Property<short>("ContractLineNo")
                        .HasColumnType("smallint")
                        .HasColumnName("contractline_no");

                    b.Property<int>("DurationNoCurrent")
                        .HasColumnType("integer")
                        .HasColumnName("duration_no_current");

                    b.Property<int>("DurationNoFull")
                        .HasColumnType("integer")
                        .HasColumnName("duration_no_full");

                    b.Property<string>("InvoiceFinalFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoice_finalflag");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer")
                        .HasColumnName("invoice_id");

                    b.Property<decimal>("InvoiceLineAutoCharge")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_autocharge");

                    b.Property<decimal>("InvoiceLineBasicCharge")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_basiccharge");

                    b.Property<decimal>("InvoiceLineCharge")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_charge");

                    b.Property<string>("InvoiceLineCreateFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoiceline_createflag");

                    b.Property<DateTime?>("InvoiceLineDeliveryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("invoiceline_deliverydate");

                    b.Property<string>("InvoiceLineDeliveryNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("invoiceline_deliveryno");

                    b.Property<float>("InvoiceLineDiscount")
                        .HasColumnType("real")
                        .HasColumnName("invoiceline_discount");

                    b.Property<string>("InvoiceLineDiscountFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoiceline_discountflag");

                    b.Property<short>("InvoiceLineLineNo")
                        .HasColumnType("smallint")
                        .HasColumnName("invoiceline_lineno");

                    b.Property<decimal>("InvoiceLineOffHireDiscount")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_offhirediscount");

                    b.Property<string>("InvoiceLineOffHireExclude")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoiceline_offhireexclude");

                    b.Property<string>("InvoiceLinePeriodFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("invoiceline_periodflag");

                    b.Property<decimal>("InvoiceLinePreEditCharge")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_preeditcharge");

                    b.Property<decimal>("InvoiceLinePrice")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("invoiceline_price");

                    b.Property<int>("InvoiceLineQty")
                        .HasColumnType("integer")
                        .HasColumnName("invoiceline_qty");

                    b.Property<short>("InvoiceSeqNo")
                        .HasColumnType("smallint")
                        .HasColumnName("invoice_seqno");

                    b.Property<string>("NomTypeCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("nomtype_code");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_date");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("stock_name");

                    b.Property<int>("StockNo")
                        .HasColumnType("integer")
                        .HasColumnName("stock_no");

                    b.Property<string>("StockTypeCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("stocktype_code");

                    b.Property<int?>("TmsBookingLineNo")
                        .HasColumnType("integer")
                        .HasColumnName("tmsbookingline_no");

                    b.Property<float>("VatPercent")
                        .HasColumnType("real")
                        .HasColumnName("vat_percent");

                    b.Property<float>("VatReversePercent")
                        .HasColumnType("real")
                        .HasColumnName("vatreverse_percent");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId")
                        .HasDatabaseName("IX_InvoiceLine_InvoiceId");

                    b.ToTable("hss_invoiceline", "tms");
                });

            modelBuilder.Entity("InvoiceManager.Models.InvoiceHistory", b =>
                {
                    b.HasOne("InvoiceManager.Models.Invoice", "Invoice")
                        .WithMany("InvoiceHistories")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceManager.Models.InvoiceLine", b =>
                {
                    b.HasOne("InvoiceManager.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceManager.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceHistories");

                    b.Navigation("InvoiceLines");
                });
#pragma warning restore 612, 618
        }
    }
}
